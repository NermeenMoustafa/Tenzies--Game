{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nermeen\\\\Learn_React\\\\first-app\\\\my-app\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport react from \"react\";\nimport ToggleButton from \"../ToggleButton\";\nimport boxes from \"../Boxes\";\nimport Box from \"./Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n\n  const [isGoodTonight, setIsGoodTonight] = react.useState(true);\n\n  function changeState() {\n    // this function to change the state based on the previous(old) one (if true => return false) and vise versa\n    setIsGoodTonight(prevState => {\n      return prevState ? false : true;\n    });\n  }\n\n  const [factsArray, editFactsArray] = react.useState([\"Fact 1\", \"Fact 2\"]);\n\n  function addFact() {\n    editFactsArray(prevArray => {\n      return [...prevArray, `Fact ${prevArray.length + 1}`];\n    });\n  }\n\n  const Facts = factsArray.map(fact => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: fact\n  }, fact, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 42\n  }, this));\n  const [cardsData, setCardsData] = react.useState({\n    firstName: \"Nermeen\",\n    lastName: \"Moustafa\",\n    frontPosition: \"Front-End Developer\",\n    backPosition: \"Back-End Developer\",\n    isFrontEnd: true\n  });\n\n  function togglePosition() {\n    setCardsData(prev => {\n      if (prev.isFrontEnd) // ...prev to get the rest of the object before edit then edit then update the old object with the new one\n        return { ...prev,\n          isFrontEnd: false\n        };else return { ...prev,\n        isFrontEnd: true\n      };\n    });\n  }\n\n  const [squares, setSquares] = react.useState(boxes);\n\n  function squareToggle(id) {\n    setSquares(prev => {\n      return prev.map(square => {\n        return square.id === id ? { ...square,\n          on: !square.on\n        } : square;\n      });\n    });\n  }\n\n  const squareElements = squares.map(square => /*#__PURE__*/_jsxDEV(Box, {\n    on: square.on,\n    toggle: () => squareToggle(square.id)\n  }, square.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this));\n  const [formData, setFormData] = react.useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    isKoki: false,\n    comments: \"\"\n  });\n  console.log(formData);\n\n  function eventHandler(event) {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n    setFormData(prev => {\n      return { ...prev,\n        [name]: type === \"checkbox\" ? checked : value\n      };\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"state\",\n      onClick: changeState,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Do I Feel Good Tonight? (click to toggle the answer from yes to no)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isGoodTonight ? \"Yes\" : \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), isGoodTonight && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"I feel Great, thanks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Facts-header\",\n        children: \"Fun Facts about React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"addFactButton\",\n        onClick: addFact,\n        children: \"Add Fact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"Facts-list\",\n        children: Facts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [cardsData.firstName, \" \", cardsData.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginLeft: \"50px\"\n        },\n        children: cardsData.isFrontEnd ? cardsData.frontPosition : cardsData.backPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        handleClick: togglePosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"squaresHeader\",\n        children: \"click the squares to change their color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), squareElements]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"First Name\",\n        name: \"firstName\",\n        onChange: eventHandler,\n        value: formData.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Last Name\",\n        name: \"lastName\",\n        onChange: eventHandler,\n        value: formData.lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        name: \"email\",\n        onChange: eventHandler,\n        value: formData.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"kokiCheck\",\n        checked: formData.isKoki,\n        name: \"isKoki\",\n        onChange: eventHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"kokiCheck\",\n        children: \"Is that you, koki ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Add your comment...\",\n        name: \"comments\",\n        onChange: eventHandler,\n        value: formData.comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"you Entered : \", formData.firstName, \" \", formData.lastName, \" \", formData.email, \" \", formData.comments]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"fieldSet\",\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"current employment status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"unemployed\",\n        name: \"employmentStatus\",\n        value: \"unemployed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"unemployed\",\n        children: \"Unemployed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"part-time\",\n        name: \"employmentStatus\",\n        value: \"part-time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"part-time\",\n        children: \"Part-time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"full-time\",\n        name: \"employmentStatus\",\n        value: \"full-time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"full-time\",\n        children: \"Full-time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"Dhbd+lQ46Qcbjd9Qs1gHv18e/i0=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Nermeen/Learn_React/first-app/my-app/src/components/Main.js"],"names":["react","ToggleButton","boxes","Box","Main","isGoodTonight","setIsGoodTonight","useState","changeState","prevState","factsArray","editFactsArray","addFact","prevArray","length","Facts","map","fact","cardsData","setCardsData","firstName","lastName","frontPosition","backPosition","isFrontEnd","togglePosition","prev","squares","setSquares","squareToggle","id","square","on","squareElements","formData","setFormData","email","isKoki","comments","console","log","eventHandler","event","name","value","type","checked","target","marginLeft"],"mappings":"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","sourcesContent":["import react from \"react\";\r\nimport ToggleButton from \"../ToggleButton\";\r\nimport boxes from \"../Boxes\"\r\nimport Box from \"./Box\";\r\n\r\nexport default function Main(){\r\n\r\n    const [isGoodTonight, setIsGoodTonight] = react.useState(true)\r\n\r\n    function changeState(){\r\n        // this function to change the state based on the previous(old) one (if true => return false) and vise versa\r\n        setIsGoodTonight((prevState) =>{\r\n            return prevState? false: true\r\n        })\r\n    }\r\n\r\n    const [factsArray, editFactsArray] = react.useState([\"Fact 1\",\"Fact 2\"])\r\n\r\n    function addFact(){\r\n        editFactsArray(prevArray => {\r\n            return [...prevArray, `Fact ${prevArray.length + 1}`]\r\n        })\r\n    }\r\n\r\n    const Facts = factsArray.map(fact => <li key={fact}>{fact}</li>)\r\n\r\n    const [cardsData, setCardsData] = react.useState({\r\n        firstName: \"Nermeen\",\r\n        lastName: \"Moustafa\",\r\n        frontPosition: \"Front-End Developer\",\r\n        backPosition: \"Back-End Developer\",\r\n        isFrontEnd: true\r\n    })\r\n\r\n    function togglePosition(){\r\n\r\n        setCardsData(prev => {\r\n            if(prev.isFrontEnd)\r\n                // ...prev to get the rest of the object before edit then edit then update the old object with the new one\r\n                return{...prev, isFrontEnd:false}\r\n            else\r\n                return{...prev, isFrontEnd:true}              \r\n        })\r\n\r\n    }\r\n\r\n    const [squares, setSquares] = react.useState(boxes)\r\n\r\n    function squareToggle(id){\r\n        \r\n        setSquares(prev => {\r\n            return prev.map(square => {\r\n                return square.id === id ? {...square, on : ! square.on} : square\r\n            })\r\n        })\r\n    }\r\n\r\n    const squareElements = squares.map(square => (\r\n        <Box    key={square.id} \r\n                on={square.on} \r\n                toggle={() => squareToggle(square.id)}/>\r\n     ) \r\n    )\r\n\r\n    const [formData, setFormData] = react.useState(\r\n        {\r\n            firstName : \"\",\r\n            lastName : \"\",\r\n            email : \"\",\r\n            isKoki : false,\r\n            comments : \"\"\r\n        }\r\n    )\r\n\r\n        console.log(formData)\r\n\r\n    function eventHandler(event){\r\n\r\n        const{name, value, type, checked} = event.target\r\n\r\n        setFormData(prev => {\r\n            return {\r\n                ...prev,\r\n                [name] : type === \"checkbox\" ? checked : value\r\n            }\r\n        })\r\n    }\r\n\r\n    return(\r\n        <main>\r\n            <div className=\"state\" onClick={changeState}>\r\n                <h1>Do I Feel Good Tonight? (click to toggle the answer from yes to no)</h1>\r\n                <h2>{isGoodTonight?\"Yes\":\"No\"}</h2>\r\n                {isGoodTonight && <h2>I feel Great, thanks</h2>}\r\n            </div>\r\n\r\n            <div>\r\n                <h1 className=\"Facts-header\">Fun Facts about React</h1>\r\n                <button className=\"addFactButton\" onClick={addFact}>Add Fact</button>\r\n                <ul className=\"Facts-list\">\r\n                    {Facts}\r\n                </ul>\r\n            </div>\r\n            \r\n            <article className=\"card\">\r\n                <h2>{cardsData.firstName} {cardsData.lastName}</h2>\r\n                <h2 style={{marginLeft:\"50px\"}}>{cardsData.isFrontEnd?cardsData.frontPosition:cardsData.backPosition}</h2>\r\n                <ToggleButton handleClick={togglePosition}/>\r\n            </article>\r\n\r\n            <article>\r\n                <h1 className=\"squaresHeader\">click the squares to change their color</h1>\r\n                {squareElements}\r\n            </article>\r\n\r\n            <form className=\"form\">\r\n                <h1>Form</h1>\r\n\r\n                <input type=\"text\" placeholder=\"First Name\" name=\"firstName\" onChange={eventHandler} \r\n                        value={formData.firstName} />\r\n                <input type=\"text\" placeholder=\"Last Name\" name=\"lastName\" onChange={eventHandler}\r\n                        value={formData.lastName} />\r\n                <input type=\"email\" placeholder=\"Email\" name=\"email\" onChange={eventHandler}\r\n                        value={formData.email}/>\r\n\r\n                <br/>\r\n\r\n                <input type=\"checkbox\" id=\"kokiCheck\" checked={formData.isKoki} name=\"isKoki\" onChange={eventHandler}/>\r\n                <label htmlFor=\"kokiCheck\">Is that you, koki ?</label>\r\n\r\n                <br/>\r\n                <textarea placeholder=\"Add your comment...\" name=\"comments\" onChange={eventHandler}\r\n                         value={formData.comments}/>\r\n\r\n                <h1>you Entered : {formData.firstName} {formData.lastName} {formData.email} {formData.comments}</h1>\r\n            </form>\r\n\r\n            <fieldset className=\"fieldSet\">\r\n                <legend>current employment status</legend>\r\n\r\n                <input type=\"radio\" id=\"unemployed\" name=\"employmentStatus\" value=\"unemployed\" />\r\n                <label htmlFor=\"unemployed\">Unemployed</label>\r\n\r\n                <input type=\"radio\" id=\"part-time\" name=\"employmentStatus\" value=\"part-time\" />\r\n                <label htmlFor=\"part-time\">Part-time</label>\r\n\r\n                <input type=\"radio\" id=\"full-time\" name=\"employmentStatus\" value=\"full-time\" />\r\n                <label htmlFor=\"full-time\">Full-time</label>\r\n\r\n            </fieldset>\r\n\r\n        </main>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}