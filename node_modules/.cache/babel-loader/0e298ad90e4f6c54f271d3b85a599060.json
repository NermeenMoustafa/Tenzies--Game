{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nermeen\\\\Learn_React\\\\Tenzies Game\\\\src\\\\components\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport react from \"react\";\nimport React from \"react\";\nimport Die from \"../components/Die\";\nimport Confetti from \"react-confetti\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n\n  function randomDice() {\n    const arr = [];\n\n    for (let i = 0; i < 10; i++) {\n      arr.push({\n        id: i + 1,\n        value: Math.ceil(Math.random() * 6),\n        isHeld: false\n      });\n    }\n\n    return arr;\n  }\n\n  const [dices, setDices] = React.useState(randomDice());\n  const dies = dices.map(die => {\n    return /*#__PURE__*/_jsxDEV(Die, {\n      value: die.value,\n      held: die.isHeld,\n      hold: () => holdDice(die.id)\n    }, die.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  });\n\n  function rollDice() {\n    if (tenzies) {\n      setTenzies(false);\n      setDices(randomDice());\n    } else {\n      setDices(prev => prev.map(die => {\n        return die.isHeld ? die : { ...die,\n          value: Math.ceil(Math.random() * 6)\n        };\n      }));\n    }\n  }\n\n  function holdDice(id) {\n    setDices(prev => prev.map(die => {\n      if (die.id === id) {\n        return { ...die,\n          isHeld: !die.isHeld\n        };\n      } else {\n        return die;\n      }\n    }));\n  }\n\n  const [tenzies, setTenzies] = react.useState(false);\n  react.useEffect(() => {\n    //every function ckeck all the array based on the giving condition and return wether true or false\n    //so first i was checking if all the dices are held the i get the value of one of the (the first for example)\n    // and make sure that all of them have the same value, so if al of them have the same value and they \n    //all held then we can say that the user is win!\n    const allHeld = dices.every(die => die.isHeld === true);\n    const firstVal = dices[0].value;\n    const allSame = dices.every(die => die.value === firstVal);\n\n    if (allHeld && allSame) {\n      setTenzies(true);\n    }\n  }, [dices]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Tenzies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"paragraph\",\n      children: \"Roll until all dice are the same.Click each die to freeze it at its current value between rolls.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dies\",\n      children: dies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), tenzies && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rollButton\",\n      onClick: rollDice,\n      children: tenzies ? \"New Game\" : \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"h/22yfL32dPUvVzya8o78P2fZUA=\");\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/Nermeen/Learn_React/Tenzies Game/src/components/Game.js"],"names":["react","React","Die","Confetti","Game","randomDice","arr","i","push","id","value","Math","ceil","random","isHeld","dices","setDices","useState","dies","map","die","holdDice","rollDice","tenzies","setTenzies","prev","useEffect","allHeld","every","firstVal","allSame"],"mappings":"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","sourcesContent":["import react from \"react\";\r\nimport React from \"react\";\r\nimport Die from \"../components/Die\"\r\nimport Confetti from \"react-confetti\";\r\n\r\nexport default function Game(){\r\n\r\n    function randomDice(){\r\n        const arr=[]\r\n        for(let i=0 ; i<10 ; i++){\r\n            arr.push({\r\n                id: i+1,\r\n                value: Math.ceil(Math.random()*6),\r\n                isHeld: false\r\n            })\r\n        }\r\n        return arr\r\n    }\r\n\r\n    const[dices, setDices] = React.useState(randomDice())\r\n\r\n    const dies = dices.map(die => {\r\n        return <Die key={die.id} value={die.value} held={die.isHeld} hold={() => holdDice(die.id)}/>\r\n    })\r\n\r\n    function rollDice(){\r\n        if(tenzies){\r\n            setTenzies(false)\r\n            setDices(randomDice())\r\n        }\r\n        else{\r\n            setDices(prev => prev.map(die => {\r\n                return die.isHeld? die : {\r\n                    ...die,\r\n                    value : Math.ceil(Math.random()*6)\r\n                }\r\n            }))\r\n        }\r\n    }\r\n\r\n    function holdDice(id){\r\n        setDices(prev => prev.map( die => {\r\n            if(die.id === id){\r\n                return{\r\n                    ...die,\r\n                    isHeld : !die.isHeld\r\n                }\r\n            }\r\n            else{\r\n                return die\r\n            }\r\n        } ) )\r\n    }\r\n\r\n    const[tenzies, setTenzies] = react.useState(false)\r\n\r\n    react.useEffect(()=>{\r\n        //every function ckeck all the array based on the giving condition and return wether true or false\r\n        //so first i was checking if all the dices are held the i get the value of one of the (the first for example)\r\n        // and make sure that all of them have the same value, so if al of them have the same value and they \r\n        //all held then we can say that the user is win!\r\n        const allHeld = dices.every(die => die.isHeld === true)\r\n        const firstVal = dices[0].value\r\n        const allSame = dices.every(die => die.value === firstVal)\r\n        if(allHeld && allSame){\r\n            setTenzies(true)\r\n        }\r\n    }, [dices])\r\n\r\n    \r\n\r\n\r\n    return(\r\n        <div className=\"Game\">\r\n            <h1 className=\"title\">Tenzies</h1>\r\n            <h2 className=\"paragraph\">Roll until all dice are the same.Click each die to freeze it \r\n                at its current value between rolls.</h2>\r\n\r\n            <div className=\"dies\">\r\n                {dies}\r\n            </div>\r\n            {tenzies && <Confetti />}\r\n            <button className=\"rollButton\" onClick={rollDice}>{tenzies?\"New Game\" : \"Roll\"}</button>\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}