{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nermeen\\\\Learn_React\\\\first-app\\\\my-app\\\\src\\\\components\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Die from \"../components/Die\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n\n  function randomDice() {\n    const arr = [];\n\n    for (let i = 0; i < 10; i++) {\n      arr.push(Math.ceil(Math.random() * 6));\n    }\n\n    return arr;\n  }\n\n  const [dices, setDices] = React.useState(randomDice());\n  const dies = dices.map(die => {\n    return /*#__PURE__*/_jsxDEV(Die, {\n      value: die\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  });\n\n  function rollDice() {\n    setDices(randomDice());\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Tenzies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"paragraph\",\n      children: \"Roll until all dice are the same.Click each die to freeze it at its current value between rolls.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dies\",\n      children: dies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rollButton\",\n      onClick: rollDice,\n      children: \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"qMH+ezgojwIkkhH9FeMRPC9LC1M=\");\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/Nermeen/Learn_React/first-app/my-app/src/components/Game.js"],"names":["React","Die","Game","randomDice","arr","i","push","Math","ceil","random","dices","setDices","useState","dies","map","die","rollDice"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,eAAe,SAASC,IAAT,GAAe;AAAA;;AAE1B,WAASC,UAAT,GAAqB;AACjB,UAAMC,GAAG,GAAC,EAAV;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAcA,CAAC,GAAC,EAAhB,EAAqBA,CAAC,EAAtB,EAAyB;AACrBD,MAAAA,GAAG,CAACE,IAAJ,CAASC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAc,CAAxB,CAAT;AACH;;AACD,WAAOL,GAAP;AACH;;AAED,QAAK,CAACM,KAAD,EAAQC,QAAR,IAAoBX,KAAK,CAACY,QAAN,CAAeT,UAAU,EAAzB,CAAzB;AAEA,QAAMU,IAAI,GAAGH,KAAK,CAACI,GAAN,CAAUC,GAAG,IAAI;AAC1B,wBAAO,QAAC,GAAD;AAAK,MAAA,KAAK,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFY,CAAb;;AAIA,WAASC,QAAT,GAAmB;AACfL,IAAAA,QAAQ,CAACR,UAAU,EAAX,CAAR;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBACKU;AADL;AAAA;AAAA;AAAA;AAAA,YALJ,eASI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAEG,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAlCuBd,I;;KAAAA,I","sourcesContent":["import React from \"react\";\r\nimport Die from \"../components/Die\"\r\n\r\nexport default function Game(){\r\n\r\n    function randomDice(){\r\n        const arr=[]\r\n        for(let i=0 ; i<10 ; i++){\r\n            arr.push(Math.ceil(Math.random()*6))\r\n        }\r\n        return arr\r\n    }\r\n\r\n    const[dices, setDices] = React.useState(randomDice())\r\n\r\n    const dies = dices.map(die => {\r\n        return <Die value={die}/>\r\n    })\r\n\r\n    function rollDice(){\r\n        setDices(randomDice())\r\n    }\r\n\r\n    return(\r\n        <div className=\"Game\">\r\n            <h1 className=\"title\">Tenzies</h1>\r\n            <h2 className=\"paragraph\">Roll until all dice are the same.Click each die to freeze it \r\n                at its current value between rolls.</h2>\r\n\r\n            <div className=\"dies\">\r\n                {dies}\r\n            </div>\r\n\r\n            <button className=\"rollButton\" onClick={rollDice}>Roll</button>\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}