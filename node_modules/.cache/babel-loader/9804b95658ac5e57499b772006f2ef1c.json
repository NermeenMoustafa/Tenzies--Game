{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nermeen\\\\Learn_React\\\\first-app\\\\my-app\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport react from \"react\";\nimport ToggleButton from \"../ToggleButton\";\nimport boxes from \"../Boxes\";\nimport Box from \"./Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n\n  const [isGoodTonight, setIsGoodTonight] = react.useState(true);\n\n  function changeState() {\n    // this function to change the state based on the previous(old) one (if true => return false) and vise versa\n    setIsGoodTonight(prevState => {\n      return prevState ? false : true;\n    });\n  }\n\n  const [factsArray, editFactsArray] = react.useState([\"Fact 1\", \"Fact 2\"]);\n\n  function addFact() {\n    editFactsArray(prevArray => {\n      return [...prevArray, `Fact ${prevArray.length + 1}`];\n    });\n  }\n\n  const Facts = factsArray.map(fact => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: fact\n  }, fact, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 42\n  }, this));\n  const [cardsData, setCardsData] = react.useState({\n    firstName: \"Nermeen\",\n    lastName: \"Moustafa\",\n    frontPosition: \"Front-End Developer\",\n    backPosition: \"Back-End Developer\",\n    isFrontEnd: true\n  });\n\n  function togglePosition() {\n    setCardsData(prev => {\n      if (prev.isFrontEnd) // ...prev to get the rest of the object before edit then edit then update the old object with the new one\n        return { ...prev,\n          isFrontEnd: false\n        };else return { ...prev,\n        isFrontEnd: true\n      };\n    });\n  }\n\n  const [squares, setSquares] = react.useState(boxes);\n\n  function squareToggle(id) {\n    setSquares(prev => {\n      const newSquares = [];\n\n      for (let i = 0; i < prev.lenght; i++) {\n        console.log(`${i}`);\n\n        if (prev[i].id === id) {\n          const updatedSquare = { ...prev[i],\n            on: prev[i].on ? false : true\n          };\n          newSquares.push(updatedSquare);\n        } else {\n          newSquares.push(prev[i]);\n        }\n      }\n\n      return newSquares;\n    });\n  }\n\n  const squareElements = squares.map(square => /*#__PURE__*/_jsxDEV(Box, {\n    id: square.id,\n    on: square.on,\n    toggle: squareToggle\n  }, square.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"state\",\n      onClick: changeState,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Do I Feel Good Tonight? (click to toggle the answer from yes to no)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isGoodTonight ? \"Yes\" : \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Facts-header\",\n        children: \"Fun Facts about React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"addFactButton\",\n        onClick: addFact,\n        children: \"Add Fact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"Facts-list\",\n        children: Facts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [cardsData.firstName, \" \", cardsData.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginLeft: \"50px\"\n        },\n        children: cardsData.isFrontEnd ? cardsData.frontPosition : cardsData.backPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        handleClick: togglePosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"squaresHeader\",\n        children: \"click the squares to change their color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), squareElements]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"A9666x8R+40doTSB2KE1l3m5cOQ=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Nermeen/Learn_React/first-app/my-app/src/components/Main.js"],"names":["react","ToggleButton","boxes","Box","Main","isGoodTonight","setIsGoodTonight","useState","changeState","prevState","factsArray","editFactsArray","addFact","prevArray","length","Facts","map","fact","cardsData","setCardsData","firstName","lastName","frontPosition","backPosition","isFrontEnd","togglePosition","prev","squares","setSquares","squareToggle","id","newSquares","i","lenght","console","log","updatedSquare","on","push","squareElements","square","marginLeft"],"mappings":"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","sourcesContent":["import react from \"react\";\r\nimport ToggleButton from \"../ToggleButton\";\r\nimport boxes from \"../Boxes\"\r\nimport Box from \"./Box\";\r\n\r\nexport default function Main(){\r\n\r\n    const [isGoodTonight, setIsGoodTonight] = react.useState(true)\r\n\r\n    function changeState(){\r\n        // this function to change the state based on the previous(old) one (if true => return false) and vise versa\r\n        setIsGoodTonight((prevState) =>{\r\n            return prevState? false: true\r\n        })\r\n    }\r\n\r\n    const [factsArray, editFactsArray] = react.useState([\"Fact 1\",\"Fact 2\"])\r\n\r\n    function addFact(){\r\n        editFactsArray(prevArray => {\r\n            return [...prevArray, `Fact ${prevArray.length + 1}`]\r\n        })\r\n    }\r\n\r\n    const Facts = factsArray.map(fact => <li key={fact}>{fact}</li>)\r\n\r\n    const [cardsData, setCardsData] = react.useState({\r\n        firstName: \"Nermeen\",\r\n        lastName: \"Moustafa\",\r\n        frontPosition: \"Front-End Developer\",\r\n        backPosition: \"Back-End Developer\",\r\n        isFrontEnd: true\r\n    })\r\n\r\n    function togglePosition(){\r\n\r\n        setCardsData(prev => {\r\n            if(prev.isFrontEnd)\r\n                // ...prev to get the rest of the object before edit then edit then update the old object with the new one\r\n                return{...prev, isFrontEnd:false}\r\n            else\r\n                return{...prev, isFrontEnd:true}              \r\n        })\r\n\r\n    }\r\n\r\n    const [squares, setSquares] = react.useState(boxes)\r\n\r\n    function squareToggle(id){\r\n        \r\n        setSquares(prev => {\r\n            const newSquares = []\r\n            for(let i = 0 ; i < prev.lenght ; i++){\r\n                console.log(`${i}`)\r\n                if(prev[i].id === id){\r\n                    const updatedSquare = {\r\n                        ...prev[i], \r\n                        on: prev[i].on ? false : true\r\n                    }\r\n                    newSquares.push(updatedSquare)\r\n                }\r\n                else{\r\n                    newSquares.push(prev[i])\r\n                }\r\n            }\r\n            return newSquares\r\n        })\r\n    }\r\n\r\n    const squareElements = squares.map(square => (\r\n        <Box    key={square.id} \r\n                id={square.id}\r\n                on={square.on} \r\n                toggle={squareToggle}/>\r\n     ) \r\n    )\r\n\r\n    return(\r\n        <main>\r\n            <div className=\"state\" onClick={changeState}>\r\n                <h1>Do I Feel Good Tonight? (click to toggle the answer from yes to no)</h1>\r\n                <h2>{isGoodTonight?\"Yes\":\"No\"}</h2>\r\n            </div>\r\n\r\n            <div>\r\n                <h1 className=\"Facts-header\">Fun Facts about React</h1>\r\n                <button className=\"addFactButton\" onClick={addFact}>Add Fact</button>\r\n                <ul className=\"Facts-list\">\r\n                    {Facts}\r\n                </ul>\r\n            </div>\r\n            \r\n            <article className=\"card\">\r\n                <h2>{cardsData.firstName} {cardsData.lastName}</h2>\r\n                <h2 style={{marginLeft:\"50px\"}}>{cardsData.isFrontEnd?cardsData.frontPosition:cardsData.backPosition}</h2>\r\n                <ToggleButton handleClick={togglePosition}/>\r\n            </article>\r\n\r\n            <article>\r\n                <h1 className=\"squaresHeader\">click the squares to change their color</h1>\r\n                {squareElements}\r\n            </article>\r\n\r\n        </main>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}